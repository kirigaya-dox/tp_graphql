enum TypeCompte {
    COURANT
    EPARGNE
}

type Compte{
    id:ID
    solde:Float
    datecreation: String
    type: TypeCompte
}


type Mutation{
    saveCompte(compte:CompteRequest):Compte
    addTransaction(transactionReq: TransactionReq): Transaction
}


input CompteRequest{
    solde:Float
    datecreation:String
    type: TypeCompte
}



type SoldeStats{
    count:Int
    sum:Float
    average:Float
}

type Query {
    allComptes:[Compte]
    compteById(id:ID):Compte
    totalSolde: SoldeStats
    allTransactions:[Transaction]
    compteTransactions(id:ID): Transaction
    transactionStats: TransactionStats
}

enum TypeTransaction {
    DEPOT,
    RETRAIT
}

type Transaction {
    id: ID
    montant: Float
    date: String
    type: TypeTransaction
    compte: Compte
}

input TransactionReq {
    compteId: ID
    montant: Float
    date: String
    type: TypeTransaction
}


type TransactionStats{
    count: Int
    sumDepots: Float
    sumRetraits: Float
}
